{"ast":null,"code":"var _jsxFileName = \"/Users/danielwong/workspace/dwong828/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [// {\n        //   name: 'Frankenstein',\n        //   id: 'aaa'\n        // },\n        // {\n        //   name: 'Dracula',\n        //   id: 'bbb'\n        // },\n        // {\n        //   name: 'Zombie',\n        //   id: 'ccc'\n        // }\n      ]\n    };\n  } //fetch user info, convert to json, and populate the monsters array\n\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    })); //    .then(users => console.log(users))\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.monsters.map(monster => React.createElement(\"h1\", {\n      key: monster.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"  \", monster.name)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielwong/workspace/dwong828/monsters-rolodex/src/App.js"],"names":["React","Component","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","render","map","monster","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAdU;AADC,KAAb;AAkBD,GAvByB,CAyB1B;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAe;AAAEP,MAAAA,QAAQ,EAAEM;AAAZ,KAAf,CAFf,EADkB,CAIlB;AAEH;;AAEDE,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAyBC,OAAO,IAC9B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBD,OAAO,CAACE,IAAjC,CADF,CAFF,CADF;AAWD;;AA9C2B;;AAiD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n      // {\n      //   name: 'Frankenstein',\n      //   id: 'aaa'\n      // },\n      // {\n      //   name: 'Dracula',\n      //   id: 'bbb'\n\n      // },\n      // {\n      //   name: 'Zombie',\n      //   id: 'ccc'\n\n      // }\n      ]\n    }\n  }\n\n  //fetch user info, convert to json, and populate the monsters array\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState ({ monsters: users}))\n    //    .then(users => console.log(users))\n\n}\n\nrender(){\n  return (\n    <div className=\"App\">\n    {\n      this.state.monsters.map( monster => \n        <h1 key={monster.id}>  { monster.name } \n        </h1>\n        )\n    }\n    </div>\n    );\n\n}\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}